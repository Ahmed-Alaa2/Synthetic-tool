{"ast":null,"code":"var _jsxFileName = \"E:\\\\BVS-MEA\\\\synthetic tool\\\\WithoutGUI\\\\frontend\\\\src\\\\components\\\\ColumnClassifier.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLUMN_TYPES = ['customerName', 'phoneNumber', 'email', 'balance', 'accountNumber', 'IBAN', 'isCorporateCustomer', 'customerNumber', 'nationalID'];\nexport default function ColumnClassifier({\n  columns,\n  onComplete,\n  onBack\n}) {\n  _s();\n  const [idx, setIdx] = useState(0);\n  const [working, setWorking] = useState(columns.map(c => ({\n    ...c\n  })));\n  const [editing, setEditing] = useState(false);\n  const curr = working[idx];\n  const confirm = () => {\n    if (idx + 1 === working.length) {\n      onComplete(working);\n    } else {\n      setIdx(idx + 1);\n      setEditing(false);\n    }\n  };\n  const change = val => {\n    working[idx].suggestion = val;\n    setWorking([...working]);\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Classify Columns (\", idx + 1, \" / \", working.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Column:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), \" \", curr.columnName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Suggested:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" \", curr.suggestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"edit\",\n        children: \"Override Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"edit\",\n        value: curr.suggestion,\n        onChange: e => change(e.target.value),\n        children: COLUMN_TYPES.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditing(true),\n      children: \"\\u270E Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirm,\n      children: \"\\u2714 Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ColumnClassifier, \"CZCZU458cEX02AmzTbiAwxt67Sg=\");\n_c = ColumnClassifier;\nvar _c;\n$RefreshReg$(_c, \"ColumnClassifier\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","COLUMN_TYPES","ColumnClassifier","columns","onComplete","onBack","_s","idx","setIdx","working","setWorking","map","c","editing","setEditing","curr","confirm","length","change","val","suggestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","columnName","htmlFor","id","value","onChange","e","target","t","_c","$RefreshReg$"],"sources":["E:/BVS-MEA/synthetic tool/WithoutGUI/frontend/src/components/ColumnClassifier.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst COLUMN_TYPES = [\r\n  'customerName',\r\n  'phoneNumber',\r\n  'email',\r\n  'balance',\r\n  'accountNumber',\r\n  'IBAN',\r\n  'isCorporateCustomer',\r\n  'customerNumber',\r\n  'nationalID',\r\n];\r\n\r\nexport default function ColumnClassifier({\r\n  columns,\r\n  onComplete,\r\n  onBack,\r\n}) {\r\n  const [idx, setIdx] = useState(0);\r\n  const [working, setWorking] = useState(\r\n    columns.map((c) => ({ ...c }))\r\n  );\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const curr = working[idx];\r\n\r\n  const confirm = () => {\r\n    if (idx + 1 === working.length) {\r\n      onComplete(working);\r\n    } else {\r\n      setIdx(idx + 1);\r\n      setEditing(false);\r\n    }\r\n  };\r\n\r\n  const change = (val) => {\r\n    working[idx].suggestion = val;\r\n    setWorking([...working]);\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"classifier\">\r\n      <h3>\r\n        Classify Columns ({idx + 1} / {working.length})\r\n      </h3>\r\n      <button onClick={onBack}>Back</button>\r\n\r\n      <p>\r\n        <strong>Column:</strong> {curr.columnName}\r\n      </p>\r\n      <p>\r\n        <strong>Suggested:</strong> {curr.suggestion}\r\n      </p>\r\n\r\n      {editing ? (\r\n        <>\r\n          <label htmlFor=\"edit\">Override Type</label>\r\n          <select\r\n            id=\"edit\"\r\n            value={curr.suggestion}\r\n            onChange={(e) => change(e.target.value)}\r\n          >\r\n            {COLUMN_TYPES.map((t) => (\r\n              <option key={t} value={t}>\r\n                {t}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      ) : (\r\n        <button onClick={() => setEditing(true)}>\r\n          ✎ Edit\r\n        </button>\r\n      )}\r\n\r\n      <button onClick={confirm}>✔ Confirm</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}