{"ast":null,"code":"var _jsxFileName = \"E:\\\\BVS-MEA\\\\synthetic tool\\\\WithoutGUI\\\\frontend\\\\src\\\\components\\\\ColumnClassifier.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ColumnClassifier({\n  connection,\n  db,\n  table,\n  onFinalize\n}) {\n  _s();\n  const [columns, setColumns] = useState([]);\n  const [overrides, setOverrides] = useState({});\n  useEffect(() => {\n    async function fetchSuggestions() {\n      const payload = {\n        connection,\n        sampleSize: 10,\n        overrides: {}\n      };\n      const res = await axios.post(`/api/${db}/${table}/classify`, payload);\n      setColumns(res.data);\n    }\n    if (db && table) fetchSuggestions();\n  }, [db, table]);\n  const handleChange = (col, type) => {\n    setOverrides(prev => ({\n      ...prev,\n      [col]: {\n        type\n      }\n    }));\n  };\n  const handleNext = () => {\n    const specs = columns.map(c => {\n      var _overrides$c$columnNa;\n      return {\n        columnName: c.columnName,\n        type: ((_overrides$c$columnNa = overrides[c.columnName]) === null || _overrides$c$columnNa === void 0 ? void 0 : _overrides$c$columnNa.type) || c.suggestion\n      };\n    });\n    onFinalize(specs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Confirm Column Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), columns.map(c => {\n      var _overrides$c$columnNa2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [c.columnName, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: ((_overrides$c$columnNa2 = overrides[c.columnName]) === null || _overrides$c$columnNa2 === void 0 ? void 0 : _overrides$c$columnNa2.type) || c.suggestion,\n          onChange: e => handleChange(c.columnName, e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: c.suggestion,\n            children: c.suggestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"STRING\",\n            children: \"STRING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"INT\",\n            children: \"INT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, c.columnName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNext,\n      children: \"Generate Fake Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ColumnClassifier, \"H3CwUxwixuN+7LHrke4IGWS5gGI=\");\n_c = ColumnClassifier;\nvar _c;\n$RefreshReg$(_c, \"ColumnClassifier\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ColumnClassifier","connection","db","table","onFinalize","_s","columns","setColumns","overrides","setOverrides","fetchSuggestions","payload","sampleSize","res","post","data","handleChange","col","type","prev","handleNext","specs","map","c","_overrides$c$columnNa","columnName","suggestion","children","fileName","_jsxFileName","lineNumber","columnNumber","_overrides$c$columnNa2","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["E:/BVS-MEA/synthetic tool/WithoutGUI/frontend/src/components/ColumnClassifier.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function ColumnClassifier({ connection, db, table, onFinalize }) {\r\n  const [columns, setColumns] = useState([]);\r\n  const [overrides, setOverrides] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchSuggestions() {\r\n      const payload = { connection, sampleSize: 10, overrides: {} };\r\n      const res = await axios.post(`/api/${db}/${table}/classify`, payload);\r\n      setColumns(res.data);\r\n    }\r\n    if (db && table) fetchSuggestions();\r\n  }, [db, table]);\r\n\r\n  const handleChange = (col, type) => {\r\n    setOverrides(prev => ({ ...prev, [col]: { type } }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const specs = columns.map(c => ({\r\n      columnName: c.columnName,\r\n      type: overrides[c.columnName]?.type || c.suggestion\r\n    }));\r\n    onFinalize(specs);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Confirm Column Types</h3>\r\n      {columns.map(c => (\r\n        <div key={c.columnName}>\r\n          <span>{c.columnName}: </span>\r\n          <select\r\n            value={overrides[c.columnName]?.type || c.suggestion}\r\n            onChange={e => handleChange(c.columnName, e.target.value)}\r\n          >\r\n            <option value={c.suggestion}>{c.suggestion}</option>\r\n            <option value=\"STRING\">STRING</option>\r\n            <option value=\"INT\">INT</option>\r\n          </select>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleNext}>Generate Fake Data</button>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}