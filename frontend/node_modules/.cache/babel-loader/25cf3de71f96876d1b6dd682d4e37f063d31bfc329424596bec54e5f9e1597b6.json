{"ast":null,"code":"var _jsxFileName = \"E:\\\\BVS-MEA\\\\synthetic tool\\\\WithoutGUI - Copy\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ConnectionForm from './components/ConnectionForm';\nimport DatabaseSelector from './components/DatabaseSelector';\nimport TableSelector from './components/TableSelector';\nimport TablePreview from './components/TablePreview';\nimport ColumnConfigurator from './components/ColumnConfigurator';\nimport FakeTableViewer from './components/FakeTableViewer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\nexport default function App() {\n  _s();\n  const [step, setStep] = useState(1);\n  const [conn, setConn] = useState(null);\n  const [databases, setDatabases] = useState([]);\n  const [tables, setTables] = useState([]);\n  const [previewData, setPreviewData] = useState([]);\n  const [configData, setConfigData] = useState([]); // ColumnConfig[]\n  const [fakeData, setFakeData] = useState([]);\n  const [ctx, setCtx] = useState({}); // { database, table, totalRows }\n\n  // 1) Connect\n  const handleConnect = async props => {\n    const res = await axios.post(`${API_URL}/api/connect/databases`, props);\n    setDatabases(res.data);\n    setConn(props);\n    setStep(2);\n  };\n\n  // 2) Choose DB\n  const handleSelectDb = async db => {\n    const res = await axios.post(`${API_URL}/api/${encodeURIComponent(db)}/tables`, conn);\n    setTables(res.data);\n    setCtx({\n      database: db\n    });\n    setStep(3);\n  };\n\n  // 3) Choose & Preview Table\n  const handlePreviewTable = async table => {\n    const previewRes = await axios.post(`${API_URL}/api/${encodeURIComponent(ctx.database)}/tables/${encodeURIComponent(table)}/preview?limit=10`, conn);\n    setPreviewData(previewRes.data);\n    setCtx(c => ({\n      ...c,\n      table\n    }));\n    setStep(4);\n  };\n\n  // 4) Configure (merge name/type/suggestion)\n  const handleConfigure = async () => {\n    // fetch total rows\n    const countRes = await axios.post(`${API_URL}/api/${encodeURIComponent(ctx.database)}/tables/${encodeURIComponent(ctx.table)}/count`, conn);\n    setCtx(c => ({\n      ...c,\n      totalRows: countRes.data\n    }));\n\n    // call our new /configure endpoint\n    const configRes = await axios.post(`${API_URL}/api/${encodeURIComponent(ctx.database)}/${encodeURIComponent(ctx.table)}/configure`, {\n      connection: conn,\n      sampleSize: 10,\n      overrides: {}\n    });\n    setConfigData(configRes.data);\n    setStep(5);\n  };\n\n  // 5) After user edits → generate fake\n  const handleGenerateFake = async finalConfig => {\n    // build override map\n    const overrides = finalConfig.reduce((m, r) => {\n      m[r.columnName] = {\n        type: r.suggestion,\n        dataType: r.dataType,\n        startsWith: r.textPrefix || r.intPrefix,\n        endsWith: r.textSuffix || r.intSuffix,\n        min: r.suggestionCategory === 'Integer' ? r.intMin : r.textMin,\n        max: r.suggestionCategory === 'Integer' ? r.intMax : r.textMax\n      };\n      return m;\n    }, {});\n    const fakeRes = await axios.post(`${API_URL}/api/${encodeURIComponent(ctx.database)}/${encodeURIComponent(ctx.table)}/fake`, {\n      connection: conn,\n      rowCount: ctx.totalRows,\n      columns: overrides\n    });\n    setFakeData(fakeRes.data);\n    setStep(6);\n  };\n\n  // 6) Fake table viewer\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(ConnectionForm, {\n      onConnect: handleConnect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 22\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(DatabaseSelector, {\n      databases: databases,\n      onSelectDb: handleSelectDb,\n      onBack: () => setStep(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), step === 3 && /*#__PURE__*/_jsxDEV(TableSelector, {\n      tables: tables,\n      onPreviewTable: handlePreviewTable,\n      onBack: () => setStep(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), step === 4 && /*#__PURE__*/_jsxDEV(TablePreview, {\n      previewData: previewData,\n      onConfigure: handleConfigure,\n      onBack: () => setStep(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), step === 5 && /*#__PURE__*/_jsxDEV(ColumnConfigurator, {\n      configData: configData,\n      onGenerate: handleGenerateFake,\n      onBack: () => setStep(4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), step === 6 && /*#__PURE__*/_jsxDEV(FakeTableViewer, {\n      data: fakeData,\n      onRestart: () => setStep(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9b3pFlJyDRC6eZxAbwcUhH41KP4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ConnectionForm","DatabaseSelector","TableSelector","TablePreview","ColumnConfigurator","FakeTableViewer","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","step","setStep","conn","setConn","databases","setDatabases","tables","setTables","previewData","setPreviewData","configData","setConfigData","fakeData","setFakeData","ctx","setCtx","handleConnect","props","res","post","data","handleSelectDb","db","encodeURIComponent","database","handlePreviewTable","table","previewRes","c","handleConfigure","countRes","totalRows","configRes","connection","sampleSize","overrides","handleGenerateFake","finalConfig","reduce","m","r","columnName","type","suggestion","dataType","startsWith","textPrefix","intPrefix","endsWith","textSuffix","intSuffix","min","suggestionCategory","intMin","textMin","max","intMax","textMax","fakeRes","rowCount","columns","className","children","onConnect","fileName","_jsxFileName","lineNumber","columnNumber","onSelectDb","onBack","onPreviewTable","onConfigure","onGenerate","onRestart","_c","$RefreshReg$"],"sources":["E:/BVS-MEA/synthetic tool/WithoutGUI - Copy/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport ConnectionForm     from './components/ConnectionForm';\r\nimport DatabaseSelector   from './components/DatabaseSelector';\r\nimport TableSelector      from './components/TableSelector';\r\nimport TablePreview       from './components/TablePreview';\r\nimport ColumnConfigurator from './components/ColumnConfigurator';\r\nimport FakeTableViewer    from './components/FakeTableViewer';\r\n\r\nimport './App.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8080';\r\n\r\nexport default function App() {\r\n  const [step, setStep]             = useState(1);\r\n  const [conn, setConn]             = useState(null);\r\n  const [databases, setDatabases]   = useState([]);\r\n  const [tables, setTables]         = useState([]);\r\n  const [previewData, setPreviewData]   = useState([]);\r\n  const [configData, setConfigData]     = useState([]); // ColumnConfig[]\r\n  const [fakeData, setFakeData]       = useState([]);\r\n  const [ctx, setCtx]                 = useState({});    // { database, table, totalRows }\r\n\r\n  // 1) Connect\r\n  const handleConnect = async (props) => {\r\n    const res = await axios.post(`${API_URL}/api/connect/databases`, props);\r\n    setDatabases(res.data);\r\n    setConn(props);\r\n    setStep(2);\r\n  };\r\n\r\n  // 2) Choose DB\r\n  const handleSelectDb = async (db) => {\r\n    const res = await axios.post(`${API_URL}/api/${encodeURIComponent(db)}/tables`, conn);\r\n    setTables(res.data);\r\n    setCtx({ database: db });\r\n    setStep(3);\r\n  };\r\n\r\n  // 3) Choose & Preview Table\r\n  const handlePreviewTable = async (table) => {\r\n    const previewRes = await axios.post(\r\n      `${API_URL}/api/${encodeURIComponent(ctx.database)}/tables/${encodeURIComponent(table)}/preview?limit=10`,\r\n      conn\r\n    );\r\n    setPreviewData(previewRes.data);\r\n    setCtx(c => ({ ...c, table }));\r\n    setStep(4);\r\n  };\r\n\r\n  // 4) Configure (merge name/type/suggestion)\r\n  const handleConfigure = async () => {\r\n    // fetch total rows\r\n    const countRes = await axios.post(\r\n      `${API_URL}/api/${encodeURIComponent(ctx.database)}/tables/${encodeURIComponent(ctx.table)}/count`,\r\n      conn\r\n    );\r\n    setCtx(c => ({ ...c, totalRows: countRes.data }));\r\n\r\n    // call our new /configure endpoint\r\n    const configRes = await axios.post(\r\n      `${API_URL}/api/${encodeURIComponent(ctx.database)}/${encodeURIComponent(ctx.table)}/configure`,\r\n      { connection: conn, sampleSize: 10, overrides: {} }\r\n    );\r\n    setConfigData(configRes.data);\r\n    setStep(5);\r\n  };\r\n\r\n  // 5) After user edits → generate fake\r\n  const handleGenerateFake = async (finalConfig) => {\r\n    // build override map\r\n    const overrides = finalConfig.reduce((m, r) => {\r\n      m[r.columnName] = {\r\n        type:       r.suggestion,\r\n        dataType:   r.dataType,\r\n        startsWith: r.textPrefix || r.intPrefix,\r\n        endsWith:   r.textSuffix || r.intSuffix,\r\n        min:        r.suggestionCategory==='Integer'? r.intMin : r.textMin,\r\n        max:        r.suggestionCategory==='Integer'? r.intMax : r.textMax\r\n      };\r\n      return m;\r\n    }, {});\r\n\r\n    const fakeRes = await axios.post(\r\n      `${API_URL}/api/${encodeURIComponent(ctx.database)}/${encodeURIComponent(ctx.table)}/fake`,\r\n      { connection: conn, rowCount: ctx.totalRows, columns: overrides }\r\n    );\r\n    setFakeData(fakeRes.data);\r\n    setStep(6);\r\n  };\r\n\r\n  // 6) Fake table viewer\r\n  return (\r\n    <div className=\"app-container\">\r\n      {step === 1 && <ConnectionForm onConnect={handleConnect} />}\r\n\r\n      {step === 2 && (\r\n        <DatabaseSelector\r\n          databases={databases}\r\n          onSelectDb={handleSelectDb}\r\n          onBack={() => setStep(1)}\r\n        />\r\n      )}\r\n\r\n      {step === 3 && (\r\n        <TableSelector\r\n          tables={tables}\r\n          onPreviewTable={handlePreviewTable}\r\n          onBack={() => setStep(2)}\r\n        />\r\n      )}\r\n\r\n      {step === 4 && (\r\n        <TablePreview\r\n          previewData={previewData}\r\n          onConfigure={handleConfigure}\r\n          onBack={() => setStep(3)}\r\n        />\r\n      )}\r\n\r\n      {step === 5 && (\r\n        <ColumnConfigurator\r\n          configData={configData}\r\n          onGenerate={handleGenerateFake}\r\n          onBack={() => setStep(4)}\r\n        />\r\n      )}\r\n\r\n      {step === 6 && (\r\n        <FakeTableViewer\r\n          data={fakeData}\r\n          onRestart={() => setStep(3)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}