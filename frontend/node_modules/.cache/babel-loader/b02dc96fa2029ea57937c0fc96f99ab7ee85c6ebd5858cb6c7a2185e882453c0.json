{"ast":null,"code":"var _jsxFileName = \"E:\\\\BVS-MEA\\\\synthetic tool\\\\WithoutGUI\\\\frontend\\\\src\\\\components\\\\ColumnClassifier.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst COLUMN_TYPES = ['CUSTOMER_NAME', 'PHONE_NUMBER', 'EMAIL', 'BALANCE', 'ACCOUNT_NUMBER', 'IBAN', 'IS_CORPORATE_CUSTOMER', 'CUSTOMER_NUMBER', 'NATIONAL_ID', 'ADDRESS', 'UNKNOWN'];\nexport default function ColumnClassifier({\n  previewData,\n  // real rows: [{ col1:…, col2:…, … }, …]\n  columns,\n  // suggestions: [{ columnName: 'col1', suggestion: 'CUSTOMER_NAME' }, …]\n  onComplete,\n  onBack\n}) {\n  _s();\n  // 1) get the raw SQL keys\n  const realKeys = previewData && previewData.length > 0 ? Object.keys(previewData[0]) : [];\n\n  // 2) build working list of { columnName: rawKey, suggestion: inferredOrOverride }\n  const [working, setWorking] = useState([]);\n  useEffect(() => {\n    const list = realKeys.map((col, i) => {\n      var _columns$i;\n      return {\n        columnName: col,\n        suggestion: ((_columns$i = columns[i]) === null || _columns$i === void 0 ? void 0 : _columns$i.suggestion) || 'UNKNOWN'\n      };\n    });\n    setWorking(list);\n  }, [previewData, columns, realKeys]);\n  const [idx, setIdx] = useState(0);\n  const [editing, setEditing] = useState(false);\n  const curr = working[idx] || {\n    columnName: '',\n    suggestion: ''\n  };\n  const confirm = () => {\n    if (idx + 1 === working.length) {\n      onComplete(working);\n    } else {\n      setIdx(idx + 1);\n      setEditing(false);\n    }\n  };\n  const change = val => {\n    const next = [...working];\n    next[idx].suggestion = val;\n    setWorking(next);\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"classifier\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Table Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: 'auto',\n        marginBottom: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: realKeys.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: previewData.map((row, rIdx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: realKeys.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[col]\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, this))\n          }, rIdx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Classify Columns (\", idx + 1, \" / \", working.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Column:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), \" \", curr.columnName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Suggested Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", curr.suggestion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), editing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"edit\",\n        children: \"Override Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"edit\",\n        value: curr.suggestion,\n        onChange: e => change(e.target.value),\n        children: COLUMN_TYPES.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEditing(true),\n      children: \"\\u270E Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirm,\n      children: \"\\u2714 Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ColumnClassifier, \"/Ut3qDv94DSkTDOuivzDDoiuaas=\");\n_c = ColumnClassifier;\nvar _c;\n$RefreshReg$(_c, \"ColumnClassifier\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","COLUMN_TYPES","ColumnClassifier","previewData","columns","onComplete","onBack","_s","realKeys","length","Object","keys","working","setWorking","list","map","col","i","_columns$i","columnName","suggestion","idx","setIdx","editing","setEditing","curr","confirm","change","val","next","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflowX","marginBottom","row","rIdx","onClick","htmlFor","id","value","onChange","e","target","t","_c","$RefreshReg$"],"sources":["E:/BVS-MEA/synthetic tool/WithoutGUI/frontend/src/components/ColumnClassifier.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst COLUMN_TYPES = [\r\n  'CUSTOMER_NAME',\r\n  'PHONE_NUMBER',\r\n  'EMAIL',\r\n  'BALANCE',\r\n  'ACCOUNT_NUMBER',\r\n  'IBAN',\r\n  'IS_CORPORATE_CUSTOMER',\r\n  'CUSTOMER_NUMBER',\r\n  'NATIONAL_ID',\r\n  'ADDRESS',\r\n  'UNKNOWN',\r\n];\r\n\r\nexport default function ColumnClassifier({\r\n  previewData,   // real rows: [{ col1:…, col2:…, … }, …]\r\n  columns,       // suggestions: [{ columnName: 'col1', suggestion: 'CUSTOMER_NAME' }, …]\r\n  onComplete,\r\n  onBack,\r\n}) {\r\n  // 1) get the raw SQL keys\r\n  const realKeys = previewData && previewData.length > 0\r\n    ? Object.keys(previewData[0])\r\n    : [];\r\n\r\n  // 2) build working list of { columnName: rawKey, suggestion: inferredOrOverride }\r\n  const [working, setWorking] = useState([]);\r\n  useEffect(() => {\r\n    const list = realKeys.map((col, i) => ({\r\n      columnName: col,\r\n      suggestion: columns[i]?.suggestion || 'UNKNOWN'\r\n    }));\r\n    setWorking(list);\r\n  }, [previewData, columns, realKeys]);\r\n\r\n  const [idx, setIdx] = useState(0);\r\n  const [editing, setEditing] = useState(false);\r\n\r\n  const curr = working[idx] || { columnName: '', suggestion: '' };\r\n\r\n  const confirm = () => {\r\n    if (idx + 1 === working.length) {\r\n      onComplete(working);\r\n    } else {\r\n      setIdx(idx + 1);\r\n      setEditing(false);\r\n    }\r\n  };\r\n\r\n  const change = (val) => {\r\n    const next = [...working];\r\n    next[idx].suggestion = val;\r\n    setWorking(next);\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"classifier\">\r\n      {/* ===== REAL DATA PREVIEW ===== */}\r\n      <h3>Table Preview</h3>\r\n      <div style={{ overflowX: 'auto', marginBottom: 24 }}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {realKeys.map((col) => (\r\n                <th key={col}>{col}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {previewData.map((row, rIdx) => (\r\n              <tr key={rIdx}>\r\n                {realKeys.map((col) => (\r\n                  <td key={col}>{row[col]}</td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {/* ===== CLASSIFICATION WIZARD ===== */}\r\n      <h3>\r\n        Classify Columns ({idx + 1} / {working.length})\r\n      </h3>\r\n      <button onClick={onBack}>Back</button>\r\n\r\n      <p>\r\n        <strong>Column:</strong> {curr.columnName}\r\n      </p>\r\n      <p>\r\n        <strong>Suggested Type:</strong> {curr.suggestion}\r\n      </p>\r\n\r\n      {editing ? (\r\n        <>\r\n          <label htmlFor=\"edit\">Override Type</label>\r\n          <select\r\n            id=\"edit\"\r\n            value={curr.suggestion}\r\n            onChange={(e) => change(e.target.value)}\r\n          >\r\n            {COLUMN_TYPES.map((t) => (\r\n              <option key={t} value={t}>\r\n                {t}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      ) : (\r\n        <button onClick={() => setEditing(true)}>✎ Edit</button>\r\n      )}\r\n\r\n      <button onClick={confirm}>✔ Confirm</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}