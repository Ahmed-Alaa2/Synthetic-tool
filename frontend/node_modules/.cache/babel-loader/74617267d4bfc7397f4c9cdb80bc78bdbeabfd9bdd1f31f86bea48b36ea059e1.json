{"ast":null,"code":"var _jsxFileName = \"E:\\\\BVS-MEA\\\\synthetic tool\\\\WithoutGUI\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ConnectionForm from './components/ConnectionForm';\nimport DatabaseSelector from './components/DatabaseSelector';\nimport TableSelector from './components/TableSelector';\nimport ColumnClassifier from './components/ColumnClassifier';\nimport FakeTableViewer from './components/FakeTableViewer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [connection, setConnection] = useState(null);\n  const [databases, setDatabases] = useState([]);\n  const [selectedDb, setSelectedDb] = useState(null);\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [suggestions, setSuggestions] = useState([]);\n\n  // Load databases after connecting\n  useEffect(() => {\n    if (!connection) return;\n    axios.post('/api/connect/databases', connection).then(res => setDatabases(res.data)).catch(err => console.error(err));\n  }, [connection]);\n\n  // Load tables after selecting a database\n  useEffect(() => {\n    if (!connection || !selectedDb) return;\n    axios.post(`/api/${selectedDb}/tables`, connection).then(res => setTables(res.data)).catch(err => console.error(err));\n  }, [connection, selectedDb]);\n\n  // Finalize column suggestions from classifier\n  const handleFinalize = specs => {\n    setSuggestions(specs);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [!connection && /*#__PURE__*/_jsxDEV(ConnectionForm, {\n      onConnect: setConnection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), connection && !selectedDb && /*#__PURE__*/_jsxDEV(DatabaseSelector, {\n      databases: databases,\n      onSelect: db => {\n        setSelectedDb(db);\n        setSuggestions([]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), connection && selectedDb && !selectedTable && /*#__PURE__*/_jsxDEV(TableSelector, {\n      tables: tables,\n      onSelect: tbl => {\n        setSelectedTable(tbl);\n        setSuggestions([]);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), connection && selectedDb && selectedTable && !suggestions.length && /*#__PURE__*/_jsxDEV(ColumnClassifier, {\n      connection: connection,\n      db: selectedDb,\n      table: selectedTable,\n      onFinalize: handleFinalize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(FakeTableViewer, {\n      connection: connection,\n      db: selectedDb,\n      table: selectedTable,\n      columnSpecs: suggestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rMzvCnmYuxIUh+Wx+0AlsKIPD2w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ConnectionForm","DatabaseSelector","TableSelector","ColumnClassifier","FakeTableViewer","axios","jsxDEV","_jsxDEV","App","_s","connection","setConnection","databases","setDatabases","selectedDb","setSelectedDb","tables","setTables","selectedTable","setSelectedTable","suggestions","setSuggestions","post","then","res","data","catch","err","console","error","handleFinalize","specs","className","children","onConnect","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","db","tbl","length","table","onFinalize","columnSpecs","_c","$RefreshReg$"],"sources":["E:/BVS-MEA/synthetic tool/WithoutGUI/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ConnectionForm from './components/ConnectionForm';\r\nimport DatabaseSelector from './components/DatabaseSelector';\r\nimport TableSelector from './components/TableSelector';\r\nimport ColumnClassifier from './components/ColumnClassifier';\r\nimport FakeTableViewer from './components/FakeTableViewer';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [connection, setConnection] = useState(null);\r\n  const [databases, setDatabases] = useState([]);\r\n  const [selectedDb, setSelectedDb] = useState(null);\r\n  const [tables, setTables] = useState([]);\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  // Load databases after connecting\r\n  useEffect(() => {\r\n    if (!connection) return;\r\n    axios.post('/api/connect/databases', connection)\r\n      .then(res => setDatabases(res.data))\r\n      .catch(err => console.error(err));\r\n  }, [connection]);\r\n\r\n  // Load tables after selecting a database\r\n  useEffect(() => {\r\n    if (!connection || !selectedDb) return;\r\n    axios.post(`/api/${selectedDb}/tables`, connection)\r\n      .then(res => setTables(res.data))\r\n      .catch(err => console.error(err));\r\n  }, [connection, selectedDb]);\r\n\r\n  // Finalize column suggestions from classifier\r\n  const handleFinalize = specs => {\r\n    setSuggestions(specs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {/* Step 1: Connect */}\r\n      {!connection && <ConnectionForm onConnect={setConnection} />}\r\n\r\n      {/* Step 2: Choose Database */}\r\n      {connection && !selectedDb && (\r\n        <DatabaseSelector\r\n          databases={databases}\r\n          onSelect={db => {\r\n            setSelectedDb(db);\r\n            setSuggestions([]);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Step 3: Choose Table */}\r\n      {connection && selectedDb && !selectedTable && (\r\n        <TableSelector\r\n          tables={tables}\r\n          onSelect={tbl => {\r\n            setSelectedTable(tbl);\r\n            setSuggestions([]);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {/* Step 4: Classify Columns */}\r\n      {connection && selectedDb && selectedTable && !suggestions.length && (\r\n        <ColumnClassifier\r\n          connection={connection}\r\n          db={selectedDb}\r\n          table={selectedTable}\r\n          onFinalize={handleFinalize}\r\n        />\r\n      )}\r\n\r\n      {/* Step 5: View Fake Data */}\r\n      {suggestions.length > 0 && (\r\n        <FakeTableViewer\r\n          connection={connection}\r\n          db={selectedDb}\r\n          table={selectedTable}\r\n          columnSpecs={suggestions}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}